package it.etoken.base.model.eosblock.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TransactionsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    public TransactionsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andBlockIdIsNull() {
            addCriterion("block_id is null");
            return (Criteria) this;
        }

        public Criteria andBlockIdIsNotNull() {
            addCriterion("block_id is not null");
            return (Criteria) this;
        }

        public Criteria andBlockIdEqualTo(Integer value) {
            addCriterion("block_id =", value, "blockId");
            return (Criteria) this;
        }

        public Criteria andBlockIdNotEqualTo(Integer value) {
            addCriterion("block_id <>", value, "blockId");
            return (Criteria) this;
        }

        public Criteria andBlockIdGreaterThan(Integer value) {
            addCriterion("block_id >", value, "blockId");
            return (Criteria) this;
        }

        public Criteria andBlockIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("block_id >=", value, "blockId");
            return (Criteria) this;
        }

        public Criteria andBlockIdLessThan(Integer value) {
            addCriterion("block_id <", value, "blockId");
            return (Criteria) this;
        }

        public Criteria andBlockIdLessThanOrEqualTo(Integer value) {
            addCriterion("block_id <=", value, "blockId");
            return (Criteria) this;
        }

        public Criteria andBlockIdIn(List<Integer> values) {
            addCriterion("block_id in", values, "blockId");
            return (Criteria) this;
        }

        public Criteria andBlockIdNotIn(List<Integer> values) {
            addCriterion("block_id not in", values, "blockId");
            return (Criteria) this;
        }

        public Criteria andBlockIdBetween(Integer value1, Integer value2) {
            addCriterion("block_id between", value1, value2, "blockId");
            return (Criteria) this;
        }

        public Criteria andBlockIdNotBetween(Integer value1, Integer value2) {
            addCriterion("block_id not between", value1, value2, "blockId");
            return (Criteria) this;
        }

        public Criteria andRefBlockNumIsNull() {
            addCriterion("ref_block_num is null");
            return (Criteria) this;
        }

        public Criteria andRefBlockNumIsNotNull() {
            addCriterion("ref_block_num is not null");
            return (Criteria) this;
        }

        public Criteria andRefBlockNumEqualTo(Integer value) {
            addCriterion("ref_block_num =", value, "refBlockNum");
            return (Criteria) this;
        }

        public Criteria andRefBlockNumNotEqualTo(Integer value) {
            addCriterion("ref_block_num <>", value, "refBlockNum");
            return (Criteria) this;
        }

        public Criteria andRefBlockNumGreaterThan(Integer value) {
            addCriterion("ref_block_num >", value, "refBlockNum");
            return (Criteria) this;
        }

        public Criteria andRefBlockNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("ref_block_num >=", value, "refBlockNum");
            return (Criteria) this;
        }

        public Criteria andRefBlockNumLessThan(Integer value) {
            addCriterion("ref_block_num <", value, "refBlockNum");
            return (Criteria) this;
        }

        public Criteria andRefBlockNumLessThanOrEqualTo(Integer value) {
            addCriterion("ref_block_num <=", value, "refBlockNum");
            return (Criteria) this;
        }

        public Criteria andRefBlockNumIn(List<Integer> values) {
            addCriterion("ref_block_num in", values, "refBlockNum");
            return (Criteria) this;
        }

        public Criteria andRefBlockNumNotIn(List<Integer> values) {
            addCriterion("ref_block_num not in", values, "refBlockNum");
            return (Criteria) this;
        }

        public Criteria andRefBlockNumBetween(Integer value1, Integer value2) {
            addCriterion("ref_block_num between", value1, value2, "refBlockNum");
            return (Criteria) this;
        }

        public Criteria andRefBlockNumNotBetween(Integer value1, Integer value2) {
            addCriterion("ref_block_num not between", value1, value2, "refBlockNum");
            return (Criteria) this;
        }

        public Criteria andRefBlockPrefixIsNull() {
            addCriterion("ref_block_prefix is null");
            return (Criteria) this;
        }

        public Criteria andRefBlockPrefixIsNotNull() {
            addCriterion("ref_block_prefix is not null");
            return (Criteria) this;
        }

        public Criteria andRefBlockPrefixEqualTo(Integer value) {
            addCriterion("ref_block_prefix =", value, "refBlockPrefix");
            return (Criteria) this;
        }

        public Criteria andRefBlockPrefixNotEqualTo(Integer value) {
            addCriterion("ref_block_prefix <>", value, "refBlockPrefix");
            return (Criteria) this;
        }

        public Criteria andRefBlockPrefixGreaterThan(Integer value) {
            addCriterion("ref_block_prefix >", value, "refBlockPrefix");
            return (Criteria) this;
        }

        public Criteria andRefBlockPrefixGreaterThanOrEqualTo(Integer value) {
            addCriterion("ref_block_prefix >=", value, "refBlockPrefix");
            return (Criteria) this;
        }

        public Criteria andRefBlockPrefixLessThan(Integer value) {
            addCriterion("ref_block_prefix <", value, "refBlockPrefix");
            return (Criteria) this;
        }

        public Criteria andRefBlockPrefixLessThanOrEqualTo(Integer value) {
            addCriterion("ref_block_prefix <=", value, "refBlockPrefix");
            return (Criteria) this;
        }

        public Criteria andRefBlockPrefixIn(List<Integer> values) {
            addCriterion("ref_block_prefix in", values, "refBlockPrefix");
            return (Criteria) this;
        }

        public Criteria andRefBlockPrefixNotIn(List<Integer> values) {
            addCriterion("ref_block_prefix not in", values, "refBlockPrefix");
            return (Criteria) this;
        }

        public Criteria andRefBlockPrefixBetween(Integer value1, Integer value2) {
            addCriterion("ref_block_prefix between", value1, value2, "refBlockPrefix");
            return (Criteria) this;
        }

        public Criteria andRefBlockPrefixNotBetween(Integer value1, Integer value2) {
            addCriterion("ref_block_prefix not between", value1, value2, "refBlockPrefix");
            return (Criteria) this;
        }

        public Criteria andExpirationIsNull() {
            addCriterion("expiration is null");
            return (Criteria) this;
        }

        public Criteria andExpirationIsNotNull() {
            addCriterion("expiration is not null");
            return (Criteria) this;
        }

        public Criteria andExpirationEqualTo(Date value) {
            addCriterion("expiration =", value, "expiration");
            return (Criteria) this;
        }

        public Criteria andExpirationNotEqualTo(Date value) {
            addCriterion("expiration <>", value, "expiration");
            return (Criteria) this;
        }

        public Criteria andExpirationGreaterThan(Date value) {
            addCriterion("expiration >", value, "expiration");
            return (Criteria) this;
        }

        public Criteria andExpirationGreaterThanOrEqualTo(Date value) {
            addCriterion("expiration >=", value, "expiration");
            return (Criteria) this;
        }

        public Criteria andExpirationLessThan(Date value) {
            addCriterion("expiration <", value, "expiration");
            return (Criteria) this;
        }

        public Criteria andExpirationLessThanOrEqualTo(Date value) {
            addCriterion("expiration <=", value, "expiration");
            return (Criteria) this;
        }

        public Criteria andExpirationIn(List<Date> values) {
            addCriterion("expiration in", values, "expiration");
            return (Criteria) this;
        }

        public Criteria andExpirationNotIn(List<Date> values) {
            addCriterion("expiration not in", values, "expiration");
            return (Criteria) this;
        }

        public Criteria andExpirationBetween(Date value1, Date value2) {
            addCriterion("expiration between", value1, value2, "expiration");
            return (Criteria) this;
        }

        public Criteria andExpirationNotBetween(Date value1, Date value2) {
            addCriterion("expiration not between", value1, value2, "expiration");
            return (Criteria) this;
        }

        public Criteria andPendingIsNull() {
            addCriterion("pending is null");
            return (Criteria) this;
        }

        public Criteria andPendingIsNotNull() {
            addCriterion("pending is not null");
            return (Criteria) this;
        }

        public Criteria andPendingEqualTo(Boolean value) {
            addCriterion("pending =", value, "pending");
            return (Criteria) this;
        }

        public Criteria andPendingNotEqualTo(Boolean value) {
            addCriterion("pending <>", value, "pending");
            return (Criteria) this;
        }

        public Criteria andPendingGreaterThan(Boolean value) {
            addCriterion("pending >", value, "pending");
            return (Criteria) this;
        }

        public Criteria andPendingGreaterThanOrEqualTo(Boolean value) {
            addCriterion("pending >=", value, "pending");
            return (Criteria) this;
        }

        public Criteria andPendingLessThan(Boolean value) {
            addCriterion("pending <", value, "pending");
            return (Criteria) this;
        }

        public Criteria andPendingLessThanOrEqualTo(Boolean value) {
            addCriterion("pending <=", value, "pending");
            return (Criteria) this;
        }

        public Criteria andPendingIn(List<Boolean> values) {
            addCriterion("pending in", values, "pending");
            return (Criteria) this;
        }

        public Criteria andPendingNotIn(List<Boolean> values) {
            addCriterion("pending not in", values, "pending");
            return (Criteria) this;
        }

        public Criteria andPendingBetween(Boolean value1, Boolean value2) {
            addCriterion("pending between", value1, value2, "pending");
            return (Criteria) this;
        }

        public Criteria andPendingNotBetween(Boolean value1, Boolean value2) {
            addCriterion("pending not between", value1, value2, "pending");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("created_at is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("created_at is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualTo(Date value) {
            addCriterion("created_at =", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualTo(Date value) {
            addCriterion("created_at <>", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThan(Date value) {
            addCriterion("created_at >", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("created_at >=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThan(Date value) {
            addCriterion("created_at <", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(Date value) {
            addCriterion("created_at <=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIn(List<Date> values) {
            addCriterion("created_at in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotIn(List<Date> values) {
            addCriterion("created_at not in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtBetween(Date value1, Date value2) {
            addCriterion("created_at between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotBetween(Date value1, Date value2) {
            addCriterion("created_at not between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andNumActionsIsNull() {
            addCriterion("num_actions is null");
            return (Criteria) this;
        }

        public Criteria andNumActionsIsNotNull() {
            addCriterion("num_actions is not null");
            return (Criteria) this;
        }

        public Criteria andNumActionsEqualTo(Integer value) {
            addCriterion("num_actions =", value, "numActions");
            return (Criteria) this;
        }

        public Criteria andNumActionsNotEqualTo(Integer value) {
            addCriterion("num_actions <>", value, "numActions");
            return (Criteria) this;
        }

        public Criteria andNumActionsGreaterThan(Integer value) {
            addCriterion("num_actions >", value, "numActions");
            return (Criteria) this;
        }

        public Criteria andNumActionsGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_actions >=", value, "numActions");
            return (Criteria) this;
        }

        public Criteria andNumActionsLessThan(Integer value) {
            addCriterion("num_actions <", value, "numActions");
            return (Criteria) this;
        }

        public Criteria andNumActionsLessThanOrEqualTo(Integer value) {
            addCriterion("num_actions <=", value, "numActions");
            return (Criteria) this;
        }

        public Criteria andNumActionsIn(List<Integer> values) {
            addCriterion("num_actions in", values, "numActions");
            return (Criteria) this;
        }

        public Criteria andNumActionsNotIn(List<Integer> values) {
            addCriterion("num_actions not in", values, "numActions");
            return (Criteria) this;
        }

        public Criteria andNumActionsBetween(Integer value1, Integer value2) {
            addCriterion("num_actions between", value1, value2, "numActions");
            return (Criteria) this;
        }

        public Criteria andNumActionsNotBetween(Integer value1, Integer value2) {
            addCriterion("num_actions not between", value1, value2, "numActions");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNull() {
            addCriterion("updated_at is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNotNull() {
            addCriterion("updated_at is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtEqualTo(Date value) {
            addCriterion("updated_at =", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotEqualTo(Date value) {
            addCriterion("updated_at <>", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThan(Date value) {
            addCriterion("updated_at >", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("updated_at >=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThan(Date value) {
            addCriterion("updated_at <", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanOrEqualTo(Date value) {
            addCriterion("updated_at <=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIn(List<Date> values) {
            addCriterion("updated_at in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotIn(List<Date> values) {
            addCriterion("updated_at not in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtBetween(Date value1, Date value2) {
            addCriterion("updated_at between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotBetween(Date value1, Date value2) {
            addCriterion("updated_at not between", value1, value2, "updatedAt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table transactions
     *
     * @mbg.generated do_not_delete_during_merge Tue Jul 10 16:13:42 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}