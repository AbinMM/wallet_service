package it.etoken.component.eosblock.dao.mapper;

import it.etoken.base.model.eosblock.entity.ActivityStage;
import it.etoken.base.model.eosblock.entity.ActivityStageExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface ActivityStageMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@SelectProvider(type = ActivityStageSqlProvider.class, method = "countByExample")
	long countByExample(ActivityStageExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@DeleteProvider(type = ActivityStageSqlProvider.class, method = "deleteByExample")
	int deleteByExample(ActivityStageExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@Delete({ "delete from activity_stage", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@Insert({ "insert into activity_stage (id, activity_id, ", "name, status, start_date, ", "end_date, common_count, ",
			"common_min_qty, common_max_qty, ", "lucky_count, lucky_coin_qty, ", "lucky_method, token_name, ",
			"token_contract, precision_number, ", "seq, is_paid, need_buy_eos)",
			"values (#{id,jdbcType=BIGINT}, #{activityId,jdbcType=BIGINT}, ",
			"#{name,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{startDate,jdbcType=TIMESTAMP}, ",
			"#{endDate,jdbcType=TIMESTAMP}, #{commonCount,jdbcType=BIGINT}, ",
			"#{commonMinQty,jdbcType=BIGINT}, #{commonMaxQty,jdbcType=BIGINT}, ",
			"#{luckyCount,jdbcType=BIGINT}, #{luckyCoinQty,jdbcType=BIGINT}, ",
			"#{luckyMethod,jdbcType=VARCHAR}, #{tokenName,jdbcType=VARCHAR}, ",
			"#{tokenContract,jdbcType=VARCHAR}, #{precisionNumber,jdbcType=INTEGER}, ",
			"#{seq,jdbcType=INTEGER}, #{isPaid,jdbcType=VARCHAR}, #{needBuyEos,jdbcType=BIGINT})" })
	int insert(ActivityStage record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@InsertProvider(type = ActivityStageSqlProvider.class, method = "insertSelective")
	int insertSelective(ActivityStage record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@SelectProvider(type = ActivityStageSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "activity_id", property = "activityId", jdbcType = JdbcType.BIGINT),
			@Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "start_date", property = "startDate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "end_date", property = "endDate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "common_count", property = "commonCount", jdbcType = JdbcType.BIGINT),
			@Result(column = "common_min_qty", property = "commonMinQty", jdbcType = JdbcType.BIGINT),
			@Result(column = "common_max_qty", property = "commonMaxQty", jdbcType = JdbcType.BIGINT),
			@Result(column = "lucky_count", property = "luckyCount", jdbcType = JdbcType.BIGINT),
			@Result(column = "lucky_coin_qty", property = "luckyCoinQty", jdbcType = JdbcType.BIGINT),
			@Result(column = "lucky_method", property = "luckyMethod", jdbcType = JdbcType.VARCHAR),
			@Result(column = "token_name", property = "tokenName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "token_contract", property = "tokenContract", jdbcType = JdbcType.VARCHAR),
			@Result(column = "precision_number", property = "precisionNumber", jdbcType = JdbcType.INTEGER),
			@Result(column = "seq", property = "seq", jdbcType = JdbcType.INTEGER),
			@Result(column = "is_paid", property = "isPaid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "need_buy_eos", property = "needBuyEos", jdbcType = JdbcType.BIGINT) })
	List<ActivityStage> selectByExample(ActivityStageExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@Select({ "select", "id, activity_id, name, status, start_date, end_date, common_count, common_min_qty, ",
			"common_max_qty, lucky_count, lucky_coin_qty, lucky_method, token_name, token_contract, ",
			"precision_number, seq, is_paid, need_buy_eos", "from activity_stage", "where id = #{id,jdbcType=BIGINT}" })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "activity_id", property = "activityId", jdbcType = JdbcType.BIGINT),
			@Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "start_date", property = "startDate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "end_date", property = "endDate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "common_count", property = "commonCount", jdbcType = JdbcType.BIGINT),
			@Result(column = "common_min_qty", property = "commonMinQty", jdbcType = JdbcType.BIGINT),
			@Result(column = "common_max_qty", property = "commonMaxQty", jdbcType = JdbcType.BIGINT),
			@Result(column = "lucky_count", property = "luckyCount", jdbcType = JdbcType.BIGINT),
			@Result(column = "lucky_coin_qty", property = "luckyCoinQty", jdbcType = JdbcType.BIGINT),
			@Result(column = "lucky_method", property = "luckyMethod", jdbcType = JdbcType.VARCHAR),
			@Result(column = "token_name", property = "tokenName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "token_contract", property = "tokenContract", jdbcType = JdbcType.VARCHAR),
			@Result(column = "precision_number", property = "precisionNumber", jdbcType = JdbcType.INTEGER),
			@Result(column = "seq", property = "seq", jdbcType = JdbcType.INTEGER),
			@Result(column = "is_paid", property = "isPaid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "need_buy_eos", property = "needBuyEos", jdbcType = JdbcType.BIGINT) })
	ActivityStage selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@UpdateProvider(type = ActivityStageSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") ActivityStage record, @Param("example") ActivityStageExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@UpdateProvider(type = ActivityStageSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") ActivityStage record, @Param("example") ActivityStageExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@UpdateProvider(type = ActivityStageSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(ActivityStage record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@Update({ "update activity_stage", "set activity_id = #{activityId,jdbcType=BIGINT},",
			"name = #{name,jdbcType=VARCHAR},", "status = #{status,jdbcType=VARCHAR},",
			"start_date = #{startDate,jdbcType=TIMESTAMP},", "end_date = #{endDate,jdbcType=TIMESTAMP},",
			"common_count = #{commonCount,jdbcType=BIGINT},", "common_min_qty = #{commonMinQty,jdbcType=BIGINT},",
			"common_max_qty = #{commonMaxQty,jdbcType=BIGINT},", "lucky_count = #{luckyCount,jdbcType=BIGINT},",
			"lucky_coin_qty = #{luckyCoinQty,jdbcType=BIGINT},", "lucky_method = #{luckyMethod,jdbcType=VARCHAR},",
			"token_name = #{tokenName,jdbcType=VARCHAR},", "token_contract = #{tokenContract,jdbcType=VARCHAR},",
			"precision_number = #{precisionNumber,jdbcType=INTEGER},", "seq = #{seq,jdbcType=INTEGER},",
			"is_paid = #{isPaid,jdbcType=VARCHAR},", "need_buy_eos = #{needBuyEos,jdbcType=BIGINT}",
			"where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(ActivityStage record);
}