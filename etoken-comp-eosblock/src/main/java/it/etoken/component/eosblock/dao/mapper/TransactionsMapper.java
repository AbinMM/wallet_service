package it.etoken.component.eosblock.dao.mapper;

import it.etoken.base.model.eosblock.entity.Transactions;
import it.etoken.base.model.eosblock.entity.TransactionsExample;
import it.etoken.component.eosblock.dao.provider.TransactionsSqlProvider;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
@Mapper
public interface TransactionsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @SelectProvider(type=TransactionsSqlProvider.class, method="countByExample")
    long countByExample(TransactionsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @DeleteProvider(type=TransactionsSqlProvider.class, method="deleteByExample")
    int deleteByExample(TransactionsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @Delete({
        "delete from transactions",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @Insert({
        "insert into transactions (id, block_id, ",
        "ref_block_num, ref_block_prefix, ",
        "expiration, pending, ",
        "created_at, num_actions, ",
        "updated_at)",
        "values (#{id,jdbcType=VARCHAR}, #{blockId,jdbcType=INTEGER}, ",
        "#{refBlockNum,jdbcType=INTEGER}, #{refBlockPrefix,jdbcType=INTEGER}, ",
        "#{expiration,jdbcType=TIMESTAMP}, #{pending,jdbcType=BIT}, ",
        "#{createdAt,jdbcType=TIMESTAMP}, #{numActions,jdbcType=INTEGER}, ",
        "#{updatedAt,jdbcType=TIMESTAMP})"
    })
    int insert(Transactions record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @InsertProvider(type=TransactionsSqlProvider.class, method="insertSelective")
    int insertSelective(Transactions record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @SelectProvider(type=TransactionsSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="block_id", property="blockId", jdbcType=JdbcType.INTEGER),
        @Result(column="ref_block_num", property="refBlockNum", jdbcType=JdbcType.INTEGER),
        @Result(column="ref_block_prefix", property="refBlockPrefix", jdbcType=JdbcType.INTEGER),
        @Result(column="expiration", property="expiration", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="pending", property="pending", jdbcType=JdbcType.BIT),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="num_actions", property="numActions", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<Transactions> selectByExample(TransactionsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @Select({
        "select",
        "id, block_id, ref_block_num, ref_block_prefix, expiration, pending, created_at, ",
        "num_actions, updated_at",
        "from transactions",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="block_id", property="blockId", jdbcType=JdbcType.INTEGER),
        @Result(column="ref_block_num", property="refBlockNum", jdbcType=JdbcType.INTEGER),
        @Result(column="ref_block_prefix", property="refBlockPrefix", jdbcType=JdbcType.INTEGER),
        @Result(column="expiration", property="expiration", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="pending", property="pending", jdbcType=JdbcType.BIT),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="num_actions", property="numActions", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP)
    })
    Transactions selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @UpdateProvider(type=TransactionsSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Transactions record, @Param("example") TransactionsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @UpdateProvider(type=TransactionsSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Transactions record, @Param("example") TransactionsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @UpdateProvider(type=TransactionsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Transactions record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactions
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @Update({
        "update transactions",
        "set block_id = #{blockId,jdbcType=INTEGER},",
          "ref_block_num = #{refBlockNum,jdbcType=INTEGER},",
          "ref_block_prefix = #{refBlockPrefix,jdbcType=INTEGER},",
          "expiration = #{expiration,jdbcType=TIMESTAMP},",
          "pending = #{pending,jdbcType=BIT},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP},",
          "num_actions = #{numActions,jdbcType=INTEGER},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Transactions record);
}