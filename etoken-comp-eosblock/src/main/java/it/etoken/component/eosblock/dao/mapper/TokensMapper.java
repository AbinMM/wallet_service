package it.etoken.component.eosblock.dao.mapper;

import it.etoken.base.model.eosblock.entity.Tokens;
import it.etoken.base.model.eosblock.entity.TokensExample;
import it.etoken.component.eosblock.dao.provider.TokensSqlProvider;

import java.util.List;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
@Mapper
public interface TokensMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tokens
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @SelectProvider(type=TokensSqlProvider.class, method="countByExample")
    long countByExample(TokensExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tokens
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @DeleteProvider(type=TokensSqlProvider.class, method="deleteByExample")
    int deleteByExample(TokensExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tokens
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @Insert({
        "insert into tokens (account, symbol, ",
        "amount)",
        "values (#{account,jdbcType=VARCHAR}, #{symbol,jdbcType=VARCHAR}, ",
        "#{amount,jdbcType=DOUBLE})"
    })
    int insert(Tokens record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tokens
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @InsertProvider(type=TokensSqlProvider.class, method="insertSelective")
    int insertSelective(Tokens record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tokens
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @SelectProvider(type=TokensSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="account", property="account", jdbcType=JdbcType.VARCHAR),
        @Result(column="symbol", property="symbol", jdbcType=JdbcType.VARCHAR),
        @Result(column="amount", property="amount", jdbcType=JdbcType.DOUBLE)
    })
    List<Tokens> selectByExample(TokensExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tokens
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @UpdateProvider(type=TokensSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Tokens record, @Param("example") TokensExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tokens
     *
     * @mbg.generated Tue Jul 10 16:13:42 CST 2018
     */
    @UpdateProvider(type=TokensSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Tokens record, @Param("example") TokensExample example);
}