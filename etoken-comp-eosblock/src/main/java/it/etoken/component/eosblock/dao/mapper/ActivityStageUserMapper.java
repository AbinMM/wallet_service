package it.etoken.component.eosblock.dao.mapper;

import it.etoken.base.model.eosblock.entity.ActivityStageUser;
import it.etoken.base.model.eosblock.entity.ActivityStageUserExample;
import java.util.List;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

@Mapper
public interface ActivityStageUserMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage_user
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@SelectProvider(type = ActivityStageUserSqlProvider.class, method = "countByExample")
	long countByExample(ActivityStageUserExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage_user
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@DeleteProvider(type = ActivityStageUserSqlProvider.class, method = "deleteByExample")
	int deleteByExample(ActivityStageUserExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage_user
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@Delete({ "delete from activity_stage_user", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage_user
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@Insert({ "insert into activity_stage_user (id, activity_id, ", "activity_stage_id, status, ",
			"account_name, is_winner, ", "is_lucky, trx_id, ", "trade_qty, trade_date, ", "win_qty, lucky_qty, ",
			"create_date, update_date)", "values (#{id,jdbcType=BIGINT}, #{activityId,jdbcType=BIGINT}, ",
			"#{activityStageId,jdbcType=BIGINT}, #{status,jdbcType=VARCHAR}, ",
			"#{accountName,jdbcType=VARCHAR}, #{isWinner,jdbcType=VARCHAR}, ",
			"#{isLucky,jdbcType=VARCHAR}, #{trxId,jdbcType=VARCHAR}, ",
			"#{tradeQty,jdbcType=DECIMAL}, #{tradeDate,jdbcType=TIMESTAMP}, ",
			"#{winQty,jdbcType=DECIMAL}, #{luckyQty,jdbcType=DECIMAL}, ",
			"#{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})" })
	int insert(ActivityStageUser record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage_user
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@InsertProvider(type = ActivityStageUserSqlProvider.class, method = "insertSelective")
	int insertSelective(ActivityStageUser record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage_user
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@SelectProvider(type = ActivityStageUserSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "activity_id", property = "activityId", jdbcType = JdbcType.BIGINT),
			@Result(column = "activity_stage_id", property = "activityStageId", jdbcType = JdbcType.BIGINT),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "account_name", property = "accountName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "is_winner", property = "isWinner", jdbcType = JdbcType.VARCHAR),
			@Result(column = "is_lucky", property = "isLucky", jdbcType = JdbcType.VARCHAR),
			@Result(column = "trx_id", property = "trxId", jdbcType = JdbcType.VARCHAR),
			@Result(column = "trade_qty", property = "tradeQty", jdbcType = JdbcType.DECIMAL),
			@Result(column = "trade_date", property = "tradeDate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "win_qty", property = "winQty", jdbcType = JdbcType.DECIMAL),
			@Result(column = "lucky_qty", property = "luckyQty", jdbcType = JdbcType.DECIMAL),
			@Result(column = "create_date", property = "createDate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "update_date", property = "updateDate", jdbcType = JdbcType.TIMESTAMP) })
	List<ActivityStageUser> selectByExample(ActivityStageUserExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage_user
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@Select({ "select", "id, activity_id, activity_stage_id, status, account_name, is_winner, is_lucky, ",
			"trx_id, trade_qty, trade_date, win_qty, lucky_qty, create_date, update_date", "from activity_stage_user",
			"where id = #{id,jdbcType=BIGINT}" })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "activity_id", property = "activityId", jdbcType = JdbcType.BIGINT),
			@Result(column = "activity_stage_id", property = "activityStageId", jdbcType = JdbcType.BIGINT),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "account_name", property = "accountName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "is_winner", property = "isWinner", jdbcType = JdbcType.VARCHAR),
			@Result(column = "is_lucky", property = "isLucky", jdbcType = JdbcType.VARCHAR),
			@Result(column = "trx_id", property = "trxId", jdbcType = JdbcType.VARCHAR),
			@Result(column = "trade_qty", property = "tradeQty", jdbcType = JdbcType.DECIMAL),
			@Result(column = "trade_date", property = "tradeDate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "win_qty", property = "winQty", jdbcType = JdbcType.DECIMAL),
			@Result(column = "lucky_qty", property = "luckyQty", jdbcType = JdbcType.DECIMAL),
			@Result(column = "create_date", property = "createDate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "update_date", property = "updateDate", jdbcType = JdbcType.TIMESTAMP) })
	ActivityStageUser selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage_user
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@UpdateProvider(type = ActivityStageUserSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") ActivityStageUser record,
			@Param("example") ActivityStageUserExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage_user
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@UpdateProvider(type = ActivityStageUserSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") ActivityStageUser record, @Param("example") ActivityStageUserExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage_user
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@UpdateProvider(type = ActivityStageUserSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(ActivityStageUser record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity_stage_user
	 * @mbg.generated  Fri Sep 21 16:17:12 CST 2018
	 */
	@Update({ "update activity_stage_user", "set activity_id = #{activityId,jdbcType=BIGINT},",
			"activity_stage_id = #{activityStageId,jdbcType=BIGINT},", "status = #{status,jdbcType=VARCHAR},",
			"account_name = #{accountName,jdbcType=VARCHAR},", "is_winner = #{isWinner,jdbcType=VARCHAR},",
			"is_lucky = #{isLucky,jdbcType=VARCHAR},", "trx_id = #{trxId,jdbcType=VARCHAR},",
			"trade_qty = #{tradeQty,jdbcType=DECIMAL},", "trade_date = #{tradeDate,jdbcType=TIMESTAMP},",
			"win_qty = #{winQty,jdbcType=DECIMAL},", "lucky_qty = #{luckyQty,jdbcType=DECIMAL},",
			"create_date = #{createDate,jdbcType=TIMESTAMP},", "update_date = #{updateDate,jdbcType=TIMESTAMP}",
			"where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(ActivityStageUser record);
}