package it.etoken.component.eosblock.dao.mapper;

import it.etoken.base.model.eosblock.entity.UserEosAccount;
import it.etoken.base.model.eosblock.entity.UserEosAccountExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
@Mapper
public interface UserEosAccountMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_eos_account
     *
     * @mbg.generated Wed Sep 12 15:04:47 CST 2018
     */
    @SelectProvider(type=UserEosAccountSqlProvider.class, method="countByExample")
    long countByExample(UserEosAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_eos_account
     *
     * @mbg.generated Wed Sep 12 15:04:47 CST 2018
     */
    @DeleteProvider(type=UserEosAccountSqlProvider.class, method="deleteByExample")
    int deleteByExample(UserEosAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_eos_account
     *
     * @mbg.generated Wed Sep 12 15:04:47 CST 2018
     */
    @Delete({
        "delete from user_eos_account",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_eos_account
     *
     * @mbg.generated Wed Sep 12 15:04:47 CST 2018
     */
    @Insert({
        "insert into user_eos_account (id, uid, eos_account, ",
        "create_date, update_date)",
        "values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{eosAccount,jdbcType=VARCHAR}, ",
        "#{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})"
    })
    int insert(UserEosAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_eos_account
     *
     * @mbg.generated Wed Sep 12 15:04:47 CST 2018
     */
    @InsertProvider(type=UserEosAccountSqlProvider.class, method="insertSelective")
    int insertSelective(UserEosAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_eos_account
     *
     * @mbg.generated Wed Sep 12 15:04:47 CST 2018
     */
    @SelectProvider(type=UserEosAccountSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="uid", property="uid", jdbcType=JdbcType.BIGINT),
        @Result(column="eos_account", property="eosAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_date", property="updateDate", jdbcType=JdbcType.TIMESTAMP)
    })
    List<UserEosAccount> selectByExample(UserEosAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_eos_account
     *
     * @mbg.generated Wed Sep 12 15:04:47 CST 2018
     */
    @Select({
        "select",
        "id, uid, eos_account, create_date, update_date",
        "from user_eos_account",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="uid", property="uid", jdbcType=JdbcType.BIGINT),
        @Result(column="eos_account", property="eosAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_date", property="updateDate", jdbcType=JdbcType.TIMESTAMP)
    })
    UserEosAccount selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_eos_account
     *
     * @mbg.generated Wed Sep 12 15:04:47 CST 2018
     */
    @UpdateProvider(type=UserEosAccountSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") UserEosAccount record, @Param("example") UserEosAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_eos_account
     *
     * @mbg.generated Wed Sep 12 15:04:47 CST 2018
     */
    @UpdateProvider(type=UserEosAccountSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") UserEosAccount record, @Param("example") UserEosAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_eos_account
     *
     * @mbg.generated Wed Sep 12 15:04:47 CST 2018
     */
    @UpdateProvider(type=UserEosAccountSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UserEosAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_eos_account
     *
     * @mbg.generated Wed Sep 12 15:04:47 CST 2018
     */
    @Update({
        "update user_eos_account",
        "set uid = #{uid,jdbcType=BIGINT},",
          "eos_account = #{eosAccount,jdbcType=VARCHAR},",
          "create_date = #{createDate,jdbcType=TIMESTAMP},",
          "update_date = #{updateDate,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(UserEosAccount record);
}